version: '3'

volumes:
  mysql-volume: {}
  redis-volume: {}
  data-volume: {}

services:
  frontend:
    container_name: cms-front
    build:
      context: frontend
      dockerfile: front.dev.Dockerfile
    image: cms-img-front
    environment:
      - CHOKIDAR_USEPOLLING=true
    expose:
      - 8080
    ports:
      - 8080:8080
    volumes:
      - ./frontend:/app:delegated

  backend:
    container_name: cms-back
    env_file:
      - backend/.env
    build:
      context: backend
      dockerfile: back.dev.Dockerfile
    image: cms-img-back
    expose:
      - 5000
    ports:
      - 5000:5000
    volumes:
      - ./backend:/app:delegated
      - data-volume:/data:z
    depends_on:
      - db
      - cache

  db:
    container_name: cms-mysql
    build:
      context: db
      dockerfile: db.dev.Dockerfile
    image: cms-img-mysql
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    expose:
      - 3306
    ports:
      - 3306:3306
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql-volume:/var/lib/mysql

  cache:
    container_name: cms-redis
    env_file:
      - task/.env
    build:
      context: task
      dockerfile: cache.dev.Dockerfile
    image: cms-img-redis
    ports:
      - 6379:6379
    volumes:
      - redis-volume:/data
    healthcheck:
      test: "redis-cli -h 127.0.0.1 ping"
      interval: 3s
      timeout: 1s
      retries: 5

  task:
    container_name: cms-task
    build:
      context: task
      dockerfile: task.dev.Dockerfile
    image: cms-img-task
    depends_on:
      - cache
    volumes:
    - data-volume:/data:z